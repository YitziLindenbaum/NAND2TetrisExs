// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Register (in=incOut, load=true, out=prevRegister, out=out);

    // Reset
    Not (in=reset, out=notReset);
    And16 (a=prevRegister, b[0]=notReset, b[1]=notReset, b[2]=notReset,
        b[3]=notReset, b[4]=notReset, b[5]=notReset, b[6]=notReset, b[7]=notReset,
        b[8]=notReset, b[9]=notReset, b[10]=notReset, b[11]=notReset,
        b[12]=notReset, b[13]=notReset, b[14]=notReset, b[15]=notReset,
        out=resetOut);

    // Load
    And (a=notReset, b=load, out=modifiedLoad);
    Mux16 (a=resetOut, b=in, sel=modifiedLoad, out=modifiedIn);

    // Increment
    Or (a=reset, b=load, out=resetOrLoad);
    Not (in=resetOrLoad, out=notResetOrLoad);
    And (a=notResetOrLoad, b=inc, out=modifiedInc);
    Add16 (a=modifiedIn, b[0]=modifiedInc, b[1..15]=false, out=incOut);

}
